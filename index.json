{"repository_name":"snowpacker","body":"# Snowpacker.cr\n\nSnowpacker.cr wraps around [Snowpack](https://www.snowpack.dev) and turns on the Snowpack dev server when enabled. This shard really just forgos the need to run Snowpack in a separate terminal. Along with that, it has a few extensions so you can integrate it with your preferred framework without having to manually set up the proxying.\n\n# Docs\n\n[API Docs](https://andrewc910.github.io/snowpacker.cr/index.html)\n\n# Guide\n\n## Installation\n\n```yml\ndependencies:\n  snowpacker:\n    github: andrewc910/snowpacker.cr\n    version: ~> 0.1.0\n```\n\n## Configuration\n\n`snowpack.config.js`\n\nThis file typically goes in the root directory of your project, however snowpacker.cr passes in the file path via the snowpack cli. You can put this anywhere if you set the configuration `config_path`.\n\n```js\n// Snowpack Configuration File\n// See all supported options: https://www.snowpack.dev/reference/configuration\n\n/** @type {import(\"snowpack\").SnowpackUserConfig } */\nmodule.exports = {\n  // Files that will be exluded from loading & watching.\n  exclude: [\"**/node_modules/**/*\", \"**/lib/**/*\"],\n  /**\n   * Files that will be mounted to Snowpacks dev server. Change the key to the folder(s)\n   * that contain your static assets.\n   */\n  mount: {\n    \"src/assets\": { url: \"/\" },\n  },\n  plugins: [\n    /* ... */\n  ],\n  packageOptions: {\n    /* ... */\n  },\n  devOptions: {\n    output: \"stream\", // dont clear terminal\n    open: \"none\", // dont open a web page when the server turns on\n    hmr: true, // Enables hot module reloading\n  },\n  buildOptions: {\n    out: \"public/dist\", // The folder assets will be written to after building\n  },\n};\n```\n\n`snowpacker.cr`\n\nThis file can go anywhere. For most frameworks, it would be an **initializer**.\n\n```crystal\nrequire \"snowpacker\"\n\nSnowpacker::Engine.configure do |config|\n  # If the dev server & extension middleware should be enabled. Ensure this is `true` when you\n  # want the dev server to run. Set `false` in production.\n  config.enabled = ENV[\"MY_SERVER_ENV\"]? == \"development\"\n\n  # The path `snowpack.config.js` will be loaded from.\n  # config.config_path = Dir.current\n\n  # The port requests will be redirected too. This does NOT change the port snowpack actually runs on.\n  # Make sure this matches the port in your `snowpack.config.js` file. Snowpack defaults to `8080`.\n  # config.port = 8080\n\n  # The hostname requests will be redirected too. This does NOT change the hostname snowpack actually\n  # runs on. Make sure this matches the hostname in your `snowpack.config.js` file.\n  # Snowpack defaults to `localhost`.\n  # config.hostname = \"localhost\"\n\n  # The `NODE_ENV` that will be prepended to the command starting the snowpack dev server. This can\n  # be overwritten via Crystal's environment variables with `ENV[\"NODE_ENV\"] = \"my_env\"` if you\n  # would prefer.\n  #\n  # Crystal nor Node can access environment variables outside of their process for safety reasons.\n  # Because of this, snowpacker.cr prepends the env to the command.\n  #\n  # Example: `\"NODE_ENV=#{Snowpacker.config.node_env} npx snowpack #{cmd}\"\n  # config.node_env = \"development\"\n\n  # The regex snowpacker.cr uses to match assets. If a request matches this, the request will be\n  # redirected to snowpacks dev server. The default regex should be fine for most use cases but\n  # this configuration is exposed for advanced use cases.\n  # config.asset_regex = /.(css|scss|sass|less|js|ts|jsx|tsx|ico|jpg|jpeg|png|webp|svg)/\nend\n\n# Starts a new process in the background. This is safe to leave as is. If `Snowpacker.config.enabled`\n# returns `false`, the dev server will not turn on regardless if this method is invoked or not.\nSnowpacker::Engine.run\n```\n\n## Framework Support\n\nSnowpacker is designed to be framework agnostic. You will have to write your own middleware to redirect requests to the dev server. However, Snowpacker comes with a few extensions to make your life easier.\n\n> Note: These extensions do NOT serve static files when the snowpack server is turned off. The extensions only handle redirecting requests when the server is enabled. You will still need a piece of middleware to fetch static assets in production. Ensure the snowpacker's middleware is invoked prior to your static file handling middleware in development.\n\n### Amber\n\nTODO\n\n### Athena\n\nIn your `snowpacker.cr` file, add `require \"snowpacker/ext/athena\"` below `require \"snowpacker\"`.\n\nSnowpacker's Athena extension works off of Athena's event listener system. It listens on the request phase and will return an `ART::Response` object, short circuiting the rest of the listeners, when a file match is found. The default priorty is `200`. This extension exposes another configuration setting `athena_listener_priority`. You can set this to a custom value if you require.\n\n### Lucky\n\nTODO\n\n# Contributing\n\nFork it (https://github.com/andrewc910/snowpacker.cr/fork)\nCreate your feature branch (git checkout -b my-new-feature)\nCommit your changes (git commit -am 'Add some feature'), also run bin/ameba\nPush to the branch (git push origin my-new-feature)\nCreate a new Pull Request\nDon't forget to add proper tests, if possible\n\n# Contributors\n\n- [Andrew Crotwell](https://github.com/andrewc910) - creator & maintainer\n","program":{"html_id":"snowpacker/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"snowpacker","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snowpacker/Snowpacker","path":"Snowpacker.html","kind":"module","full_name":"Snowpacker","name":"Snowpacker","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/ext/athena.cr","line_number":3,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L3"},{"filename":"src/snowpacker.cr","line_number":1,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker.cr#L1"},{"filename":"src/snowpacker/configuration.cr","line_number":1,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L1"},{"filename":"src/snowpacker/engine.cr","line_number":6,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/engine.cr#L6"},{"filename":"src/snowpacker/exceptions.cr","line_number":1,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/exceptions.cr#L1"},{"filename":"src/snowpacker/runner.cr","line_number":3,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/runner.cr#L3"},{"filename":"src/snowpacker/utils.cr","line_number":3,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/utils.cr#L3"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker.cr#L4","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Engine.instance.config"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker.cr#L8","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Engine.run"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snowpacker/Snowpacker/Configuration","path":"Snowpacker/Configuration.html","kind":"class","full_name":"Snowpacker::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"snowpacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snowpacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snowpacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ext/athena.cr","line_number":4,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L4"},{"filename":"src/snowpacker/configuration.cr","line_number":2,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L2"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snowpacker/Snowpacker","kind":"module","full_name":"Snowpacker","name":"Snowpacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"asset_regex:Regex-instance-method","html_id":"asset_regex:Regex-instance-method","name":"asset_regex","doc":"The regex snowpacker.cr uses to match assets. If a request matches this, the request will be\nredirected to snowpacks dev server. The default regex should be fine for most use cases but\nthis configuration is exposed for advanced use cases.","summary":"<p>The regex snowpacker.cr uses to match assets.</p>","abstract":false,"args":[],"args_string":" : Regex","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L31","def":{"name":"asset_regex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Regex","visibility":"Public","body":"@asset_regex"}},{"id":"asset_regex=(asset_regex:Regex)-instance-method","html_id":"asset_regex=(asset_regex:Regex)-instance-method","name":"asset_regex=","doc":"The regex snowpacker.cr uses to match assets. If a request matches this, the request will be\nredirected to snowpacks dev server. The default regex should be fine for most use cases but\nthis configuration is exposed for advanced use cases.","summary":"<p>The regex snowpacker.cr uses to match assets.</p>","abstract":false,"args":[{"name":"asset_regex","doc":null,"default_value":"","external_name":"asset_regex","restriction":"Regex"}],"args_string":"(asset_regex : Regex)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L31","def":{"name":"asset_regex=","args":[{"name":"asset_regex","doc":null,"default_value":"","external_name":"asset_regex","restriction":"Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@asset_regex = asset_regex"}},{"id":"config_path:String-instance-method","html_id":"config_path:String-instance-method","name":"config_path","doc":"The path `snowpack.config.js` will be loaded from.","summary":"<p>The path <code>snowpack.config.js</code> will be loaded from.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L4","def":{"name":"config_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@config_path"}},{"id":"config_path=(config_path:String)-instance-method","html_id":"config_path=(config_path:String)-instance-method","name":"config_path=","doc":"The path `snowpack.config.js` will be loaded from.","summary":"<p>The path <code>snowpack.config.js</code> will be loaded from.</p>","abstract":false,"args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"}],"args_string":"(config_path : String)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L4","def":{"name":"config_path=","args":[{"name":"config_path","doc":null,"default_value":"","external_name":"config_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_path = config_path"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":"If the dev server & extension middleware should be enabled. Ensure this is `true` when you\nwant the dev server to run. Set `false` in production.","summary":"<p>If the dev server & extension middleware should be enabled.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L16","def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@enabled"}},{"id":"enabled=(enabled:Bool)-instance-method","html_id":"enabled=(enabled:Bool)-instance-method","name":"enabled=","doc":"If the dev server & extension middleware should be enabled. Ensure this is `true` when you\nwant the dev server to run. Set `false` in production.","summary":"<p>If the dev server & extension middleware should be enabled.</p>","abstract":false,"args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"args_string":"(enabled : Bool)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L16","def":{"name":"enabled=","args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = enabled"}},{"id":"hostname:String-instance-method","html_id":"hostname:String-instance-method","name":"hostname","doc":"The hostname requests will be redirected too. This does NOT change the hostname snowpack actually runs on.\nMake sure this matches the hostname in your `snowpack.config.js` file. Snowpack defaults to `localhost`.","summary":"<p>The hostname requests will be redirected too.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L12","def":{"name":"hostname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@hostname"}},{"id":"hostname=(hostname:String)-instance-method","html_id":"hostname=(hostname:String)-instance-method","name":"hostname=","doc":"The hostname requests will be redirected too. This does NOT change the hostname snowpack actually runs on.\nMake sure this matches the hostname in your `snowpack.config.js` file. Snowpack defaults to `localhost`.","summary":"<p>The hostname requests will be redirected too.</p>","abstract":false,"args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"args_string":"(hostname : String)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L12","def":{"name":"hostname=","args":[{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hostname = hostname"}},{"id":"node_env:String-instance-method","html_id":"node_env:String-instance-method","name":"node_env","doc":"The `NODE_ENV` that will be prepended to the command starting the snowpack dev server. This can\nbe overwritten via Crystal's environment variables with `ENV[\"NODE_ENV\"] = \"my_env\"` if you\nwould prefer.\n\nCrystal nor Node can access environment variables outside of their process for safety reasons.\nBecause of this, snowpacker.cr prepends the env to the command.\n\nExample: `\"NODE_ENV=#{Snowpacker.config.node_env} npx snowpack #{cmd}\"","summary":"<p>The <code>NODE_ENV</code> that will be prepended to the command starting the snowpack dev server.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L26","def":{"name":"node_env","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@node_env"}},{"id":"node_env=(node_env:String)-instance-method","html_id":"node_env=(node_env:String)-instance-method","name":"node_env=","doc":"The `NODE_ENV` that will be prepended to the command starting the snowpack dev server. This can\nbe overwritten via Crystal's environment variables with `ENV[\"NODE_ENV\"] = \"my_env\"` if you\nwould prefer.\n\nCrystal nor Node can access environment variables outside of their process for safety reasons.\nBecause of this, snowpacker.cr prepends the env to the command.\n\nExample: `\"NODE_ENV=#{Snowpacker.config.node_env} npx snowpack #{cmd}\"","summary":"<p>The <code>NODE_ENV</code> that will be prepended to the command starting the snowpack dev server.</p>","abstract":false,"args":[{"name":"node_env","doc":null,"default_value":"","external_name":"node_env","restriction":"String"}],"args_string":"(node_env : String)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L26","def":{"name":"node_env=","args":[{"name":"node_env","doc":null,"default_value":"","external_name":"node_env","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node_env = node_env"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":"The port requests will be redirected too. This does NOT change the port snowpack actually runs on.\nMake sure this matches the port in your `snowpack.config.js` file. Snowpack defaults to `8080`.","summary":"<p>The port requests will be redirected too.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L8","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"port=(port:Int32)-instance-method","html_id":"port=(port:Int32)-instance-method","name":"port=","doc":"The port requests will be redirected too. This does NOT change the port snowpack actually runs on.\nMake sure this matches the port in your `snowpack.config.js` file. Snowpack defaults to `8080`.","summary":"<p>The port requests will be redirected too.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/configuration.cr#L8","def":{"name":"port=","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port = port"}}],"macros":[],"types":[]},{"html_id":"snowpacker/Snowpacker/Engine","path":"Snowpacker/Engine.html","kind":"class","full_name":"Snowpacker::Engine","name":"Engine","abstract":false,"superclass":{"html_id":"snowpacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"snowpacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"snowpacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/snowpacker/engine.cr","line_number":7,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/engine.cr#L7"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snowpacker/Snowpacker","kind":"module","full_name":"Snowpacker","name":"Snowpacker"},"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&)-class-method","name":"configure","doc":"Configuration method for snowpacker.cr.\n\n**Usage**:\n\n```crystal\n# Snowpacker::Engine.configure do |config|\n  # If the dev server & extension middleware should be enabled. Ensure this is `true` when you\n  # want the dev server to run. Set `false` in production.\n  config.enabled = ENV[\"MY_SERVER_ENV\"]? == \"development\"\n\n  # The path `snowpack.config.js` will be loaded from.\n  # config.config_path = Dir.current\n\n  # The port requests will be redirected too. This does NOT change the port snowpack actually runs on.\n  # Make sure this matches the port in your `snowpack.config.js` file. Snowpack defaults to `8080`.\n  # config.port = 8080\n\n  # The hostname requests will be redirected too. This does NOT change the hostname snowpack actually\n  # runs on. Make sure this matches the hostname in your `snowpack.config.js` file.\n  # Snowpack defaults to `localhost`.\n  # config.hostname = \"localhost\"\n\n  # The `NODE_ENV` that will be prepended to the command starting the snowpack dev server. This can\n  # be overwritten via Crystal's environment variables with `ENV[\"NODE_ENV\"] = \"my_env\"` if you\n  # would prefer.\n  #\n  # Crystal nor Node can access environment variables outside of their process for safety reasons.\n  # Because of this, snowpacker.cr prepends the env to the command.\n  #\n  # Example: `\"NODE_ENV=#{Snowpacker.config.node_env} npx snowpack #{cmd}\"\n  # config.node_env = \"development\"\n\n  # The regex snowpacker.cr uses to match assets. If a request matches this, the request will be\n  # redirected to snowpacks dev server. The default regex should be fine for most use cases but\n  # this configuration is exposed for advanced use cases.\n  # config.asset_regex = /.(css|scss|sass|less|js|ts|jsx|tsx|ico|jpg|jpeg|png|webp|svg)/\nend\n```","summary":"<p>Configuration method for snowpacker.cr.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/engine.cr#L68","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@instance\n  raise(DuplicateInstanceError.new)\nend\nconfig = Configuration.new\nyield config\n@@instance = new(config)\n"}},{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/snowpacker/engine.cr#L22","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  instance = Engine.instance\n  instance.runner.run\nrescue EngineNotConfigured\n  @@instance = new(Configuration.new)\n  Engine.instance.runner.run\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"snowpacker/Snowpacker/Ext","path":"Snowpacker/Ext.html","kind":"module","full_name":"Snowpacker::Ext","name":"Ext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/ext/athena.cr","line_number":9,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L9"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snowpacker/Snowpacker","kind":"module","full_name":"Snowpacker","name":"Snowpacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snowpacker/Snowpacker/Ext/Athena","path":"Snowpacker/Ext/Athena.html","kind":"module","full_name":"Snowpacker::Ext::Athena","name":"Athena","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/ext/athena.cr","line_number":10,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L10"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snowpacker/Snowpacker/Ext","kind":"module","full_name":"Snowpacker::Ext","name":"Ext"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"snowpacker/Snowpacker/Ext/Athena/StaticFileListener","path":"Snowpacker/Ext/Athena/StaticFileListener.html","kind":"struct","full_name":"Snowpacker::Ext::Athena::StaticFileListener","name":"StaticFileListener","abstract":false,"superclass":{"html_id":"snowpacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"snowpacker/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"snowpacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"snowpacker/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"snowpacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ext/athena.cr","line_number":12,"url":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L12"}],"repository_name":"snowpacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"snowpacker/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"snowpacker/Snowpacker/Ext/Athena","kind":"module","full_name":"Snowpacker::Ext::Athena","name":"Athena"},"doc":null,"summary":null,"class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L15","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => Snowpacker.config.athena_listener_priority}"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L12","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,_dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,_dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Proxy listener for athena based projects. This does not handle\nfetching local assets. It will return immediately if `Snowpacker.config.enabled`\nreturns `false`.","summary":"<p>Proxy listener for athena based projects.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"_dispatcher","doc":null,"default_value":"","external_name":"_dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, _dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/andrewc910/snowpacker.cr/blob/434c9b90e6f6cc0f4984bf6954d55461874a7aaf/src/ext/athena.cr#L24","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"_dispatcher","doc":null,"default_value":"","external_name":"_dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if Snowpacker.config.enabled\nelse\n  return\nend\nif event.request.method.in?(\"GET\", \"HEAD\")\nelse\n  return\nend\nif event.request.path.matches?(Snowpacker.config.asset_regex)\nelse\n  return\nend\nrequest_path = event.request.path\nif request_path.includes?('\\u{0}')\n  raise(ART::Exceptions::BadRequest.new(\"File path cannot contain NUL bytes.\"))\nend\nrequest_path = Path.posix(request_path)\nevent.response = ART::RedirectResponse.new(File.join({\"http://#{Snowpacker.config.hostname}:#{Snowpacker.config.port}\", request_path}))\n"}}],"macros":[],"types":[]}]}]}]}]}}